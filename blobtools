#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
usage: blobtools <command> [<args>...] [--help]

commands:
  version       print version number

  create        create a BlobDB
  view          print BlobDB as a table
  blobplot      plot BlobDB as a blobplot
  covplot       compare BlobDB cov(s) to additional cov file

  bam2cov       generate cov file from bam file
  sumcov        sum coverage from multiple COV files
  seqfilter     filter FASTA sequences based on header in list
  taxify        assign taxids to blast-results based on list

-h --help    show this

"""

from __future__ import division
import sys
from subprocess import call
from os.path import join, dirname
from docopt import docopt

if __name__ == '__main__':
    main_dir = join(dirname(__file__), '')
    lib_dir = join(main_dir, 'lib/')
    args = docopt(__doc__,
                  version='blobtools v0.9.18',
                  options_first=True)

    argv = [args['<command>']] + args['<args>']
    if args['<command>'] == 'create':
        exit(call(['python', main_dir + 'create.py'] + argv))
    elif args['<command>'] == 'view':
        exit(call(['python', main_dir + 'view.py'] + argv))
    elif args['<command>'] == 'blobplot' or args['<command>'] == 'plot':
        argv[0] = "blobplot"
        exit(call(['python', main_dir + 'blobplot.py'] + argv))
    elif args['<command>'] == 'bam2cov':
        exit(call(['python', main_dir + 'bam2cov.py'] + argv))
    elif args['<command>'] == 'covplot' or args['<command>'] == 'comparecov':
        argv[0] = "covplot"
        exit(call(['python', main_dir + 'covplot.py'] + argv))
    elif args['<command>'] == 'seqfilter':
        exit(call(['python', main_dir + 'seqfilter.py'] + argv))
    elif args['<command>'] == 'taxify':
        exit(call(['python', main_dir + 'taxify.py'] + argv))
    else:
        exit("%r is not a blobtools command. See 'blobtools -h'." % args['<command>'])
